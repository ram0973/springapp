{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ra/jobs/05-next-ssg/step-5/pages/post/[id].tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport { Loader } from \"../../components/Loader\";\nimport { PostBody } from \"../../components/Post/PostBody\";\n\nvar Post = function Post(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var router = useRouter();\n  if (router.isFallback) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 33\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(PostBody, {\n    post: post\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Post, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Post;\nexport var __N_SSG = true;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/ra/jobs/05-next-ssg/step-5/pages/post/[id].tsx"],"names":["useRouter","Loader","PostBody","Post","post","router","isFallback"],"mappings":";;;;;;AACA,SAASA,SAAT,QAA0B,aAA1B;AAGA,SAASC,MAAT,QAAuB,yBAAvB;AAEA,SAASC,QAAT,QAAyB,gCAAzB;;AAkBA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAyB;AAAA;;AAAA,MAAtBC,IAAsB,QAAtBA,IAAsB;AACpC,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AAEA,MAAIK,MAAM,CAACC,UAAX,EAAuB,oBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,WAAP;AACvB,sBAAO,QAAC,QAAD;AAAU,IAAA,IAAI,EAAEF;AAAhB;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CALD;;GAAMD,I;UACWH,S;;;KADXG,I;;AAON,eAAeA,IAAf","sourcesContent":["import { GetStaticProps } from \"next\"\nimport { useRouter } from \"next/router\"\nimport { fetchPost } from \"../../api/post\"\nimport { Post as PostType } from \"../../shared/types\"\nimport { Loader } from \"../../components/Loader\"\nimport { postPaths as paths } from \"../../shared/staticPaths\"\nimport { PostBody } from \"../../components/Post/PostBody\"\n\ntype PostProps = {\n  post: PostType\n}\n\nexport const getStaticProps: GetStaticProps<PostProps> = async ({\n  params\n}) => {\n  if (typeof params.id !== \"string\") throw new Error(\"Unexpected id\")\n  const post = await fetchPost(params.id)\n  return { props: { post } }\n}\n\nexport async function getStaticPaths() {\n  return { paths, fallback: true }\n}\n\nconst Post = ({ post }: PostProps) => {\n  const router = useRouter()\n\n  if (router.isFallback) return <Loader />\n  return <PostBody post={post} />\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}