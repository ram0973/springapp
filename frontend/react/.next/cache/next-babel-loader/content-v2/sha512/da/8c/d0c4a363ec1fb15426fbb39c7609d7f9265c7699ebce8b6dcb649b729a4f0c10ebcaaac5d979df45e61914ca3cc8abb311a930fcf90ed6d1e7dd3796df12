{"ast":null,"code":"import fetch from \"node-fetch\";\nimport axios from \"axios\";\nimport { config } from \"./config\";\nexport async function fetchArticles() {\n  return await fetch(`${config.baseUrl}/articles`).then(response => response.json()).then(data => data.articles);\n}\nconst axiosInstance = axios.create({\n  baseURL: `${config.baseUrl}`,\n  timeout: 5000,\n  headers: {\n    Authorization: localStorage.getItem('access_token') ? 'Bearer ' + localStorage.getItem('access_token') : null,\n    \"Content-Type\": \"application/json\",\n    accept: \"application/json\"\n  }\n});","map":{"version":3,"sources":["/home/ramil/IdeaProjects/springapp/frontend/react/api/summary.ts"],"names":["fetch","axios","config","fetchArticles","baseUrl","then","response","json","data","articles","axiosInstance","create","baseURL","timeout","headers","Authorization","localStorage","getItem","accept"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,QAAuB,UAAvB;AAEA,OAAO,eAAeC,aAAf,GAAmD;AACxD,SAAO,MAAMH,KAAK,CAAE,GAAEE,MAAM,CAACE,OAAQ,WAAnB,CAAL,CACVC,IADU,CACLC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADP,EACwBF,IADxB,CAC6BG,IAAI,IAAIA,IAAI,CAACC,QAD1C,CAAb;AAED;AAED,MAAMC,aAAa,GAAGT,KAAK,CAACU,MAAN,CAAa;AACjCC,EAAAA,OAAO,EAAG,GAAEV,MAAM,CAACE,OAAQ,EADM;AAEjCS,EAAAA,OAAO,EAAE,IAFwB;AAGjCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,cAArB,IACT,YAAYD,YAAY,CAACC,OAAb,CAAqB,cAArB,CADH,GAET,IAHC;AAIH,oBAAgB,kBAJb;AAKHC,IAAAA,MAAM,EAAE;AALL;AAHwB,CAAb,CAAtB","sourcesContent":["import fetch from \"node-fetch\";\nimport axios from \"axios\"\nimport { Article } from \"../shared/types\";\nimport { config } from \"./config\";\n\nexport async function fetchArticles(): Promise<Article[]> {\n  return await fetch(`${config.baseUrl}/articles`)\n    .then(response => response.json()).then(data => data.articles);\n}\n\nconst axiosInstance = axios.create({\n  baseURL: `${config.baseUrl}`,\n  timeout: 5000,\n  headers: {\n    Authorization: localStorage.getItem('access_token')\n        ? 'Bearer ' + localStorage.getItem('access_token')\n        : null,\n        \"Content-Type\": \"application/json\",\n        accept: \"application/json\",\n  },\n});\n\n"]},"metadata":{},"sourceType":"module"}