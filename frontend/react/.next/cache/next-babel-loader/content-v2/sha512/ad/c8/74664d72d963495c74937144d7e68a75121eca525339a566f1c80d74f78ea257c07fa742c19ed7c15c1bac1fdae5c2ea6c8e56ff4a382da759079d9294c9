{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ramil/IdeaProjects/springapp/frontend/react/components/Auth/Login.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport { loginFields } from \"./formFields\";\nimport Input from \"./Input\";\nconst fields = loginFields;\nlet fieldsState = {};\nfields.forEach(field => fieldsState[field.id] = '');\nexport default function Login() {\n  const {\n    0: loginState,\n    1: setLoginState\n  } = useState(fieldsState);\n\n  const handleChange = e => {\n    setLoginState(_objectSpread(_objectSpread({}, loginState), {}, {\n      [e.target.id]: e.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"mt-8 space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"-space-y-px\",\n      children: fields.map(field => /*#__PURE__*/_jsxDEV(Input, {\n        handleChange: handleChange,\n        value: loginState[field.id],\n        labelText: field.labelText,\n        labelFor: field.labelFor,\n        id: field.id,\n        name: field.name,\n        type: field.type,\n        isRequired: field.isRequired,\n        placeholder: field.placeholder\n      }, field.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n      children: \"Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/ramil/IdeaProjects/springapp/frontend/react/components/Auth/Login.tsx"],"names":["useState","loginFields","Input","fields","fieldsState","forEach","field","id","Login","loginState","setLoginState","handleChange","e","target","value","map","labelText","labelFor","name","type","isRequired","placeholder"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,MAAM,GAACF,WAAb;AACA,IAAIG,WAAW,GAAG,EAAlB;AACAD,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAEF,WAAW,CAACE,KAAK,CAACC,EAAP,CAAX,GAAsB,EAA5C;AAEA,eAAe,SAASC,KAAT,GAAgB;AAC3B,QAAM;AAAA,OAACC,UAAD;AAAA,OAAYC;AAAZ,MAA2BV,QAAQ,CAACI,WAAD,CAAzC;;AAEA,QAAMO,YAAY,GAAEC,CAAD,IAAK;AACpBF,IAAAA,aAAa,iCAAKD,UAAL;AAAgB,OAACG,CAAC,CAACC,MAAF,CAASN,EAAV,GAAcK,CAAC,CAACC,MAAF,CAASC;AAAvC,OAAb;AACH,GAFD;;AAKA,sBACI;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBAEQX,MAAM,CAACY,GAAP,CAAWT,KAAK,iBACR,QAAC,KAAD;AAEI,QAAA,YAAY,EAAEK,YAFlB;AAGI,QAAA,KAAK,EAAEF,UAAU,CAACH,KAAK,CAACC,EAAP,CAHrB;AAII,QAAA,SAAS,EAAED,KAAK,CAACU,SAJrB;AAKI,QAAA,QAAQ,EAAEV,KAAK,CAACW,QALpB;AAMI,QAAA,EAAE,EAAEX,KAAK,CAACC,EANd;AAOI,QAAA,IAAI,EAAED,KAAK,CAACY,IAPhB;AAQI,QAAA,IAAI,EAAEZ,KAAK,CAACa,IARhB;AASI,QAAA,UAAU,EAAEb,KAAK,CAACc,UATtB;AAUI,QAAA,WAAW,EAAEd,KAAK,CAACe;AAVvB,SACSf,KAAK,CAACC,EADf;AAAA;AAAA;AAAA;AAAA,cADR;AAFR;AAAA;AAAA;AAAA;AAAA,YADA,eAoBA;AAAQ,MAAA,KAAK,EAAC,sEAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH","sourcesContent":["import { useState } from 'react';\nimport { loginFields } from \"./formFields\";\nimport Input from \"./Input\";\n\nconst fields=loginFields;\nlet fieldsState = {};\nfields.forEach(field=>fieldsState[field.id]='');\n\nexport default function Login(){\n    const [loginState,setLoginState]=useState(fieldsState);\n\n    const handleChange=(e)=>{\n        setLoginState({...loginState,[e.target.id]:e.target.value})\n    }\n\n\n    return(\n        <form className=\"mt-8 space-y-6\">\n        <div className=\"-space-y-px\">\n            {\n                fields.map(field=>\n                        <Input\n                            key={field.id}\n                            handleChange={handleChange}\n                            value={loginState[field.id]}\n                            labelText={field.labelText}\n                            labelFor={field.labelFor}\n                            id={field.id}\n                            name={field.name}\n                            type={field.type}\n                            isRequired={field.isRequired}\n                            placeholder={field.placeholder}\n                    />\n                \n                )\n            }\n        </div>\n        <button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\n            Button\n        </button>\n      </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}