{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ramil/IdeaProjects/springapp/frontend/react/components/Auth/SignupPage.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport { signupFields } from \"./formFields\";\nimport FormAction from \"./FormAction\";\nimport Input from \"./Input\";\nconst fields = signupFields;\nlet fieldsState = {};\nfields.forEach(field => fieldsState[field.id] = '');\nexport default function SignupPage() {\n  const {\n    0: signupState,\n    1: setSignupState\n  } = useState(fieldsState);\n\n  const handleChange = e => setSignupState(_objectSpread(_objectSpread({}, signupState), {}, {\n    [e.target.id]: e.target.value\n  }));\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(signupState);\n    createAccount();\n  }; //handle Signup API Integration here\n\n\n  const createAccount = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"mt-8 space-y-6\",\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [fields.map(field => /*#__PURE__*/_jsxDEV(Input, {\n        handleChange: handleChange,\n        value: signupState[field.id],\n        labelText: field.labelText,\n        labelFor: field.labelFor,\n        id: field.id,\n        name: field.name,\n        type: field.type,\n        isRequired: field.isRequired,\n        placeholder: field.placeholder\n      }, field.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(FormAction, {\n        handleSubmit: handleSubmit,\n        text: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/ramil/IdeaProjects/springapp/frontend/react/components/Auth/SignupPage.tsx"],"names":["useState","signupFields","FormAction","Input","fields","fieldsState","forEach","field","id","SignupPage","signupState","setSignupState","handleChange","e","target","value","handleSubmit","preventDefault","console","log","createAccount","map","labelText","labelFor","name","type","isRequired","placeholder"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,MAAM,GAACH,YAAb;AACA,IAAII,WAAW,GAAC,EAAhB;AAEAD,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIF,WAAW,CAACE,KAAK,CAACC,EAAP,CAAX,GAAsB,EAA9C;AAEA,eAAe,SAASC,UAAT,GAAqB;AAClC,QAAM;AAAA,OAACC,WAAD;AAAA,OAAaC;AAAb,MAA6BX,QAAQ,CAACK,WAAD,CAA3C;;AAEA,QAAMO,YAAY,GAAEC,CAAD,IAAKF,cAAc,iCAAKD,WAAL;AAAiB,KAACG,CAAC,CAACC,MAAF,CAASN,EAAV,GAAcK,CAAC,CAACC,MAAF,CAASC;AAAxC,KAAtC;;AAEA,QAAMC,YAAY,GAAEH,CAAD,IAAK;AACtBA,IAAAA,CAAC,CAACI,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;AACAU,IAAAA,aAAa;AACd,GAJD,CALkC,CAWlC;;;AACA,QAAMA,aAAa,GAAC,MAAI,CAEvB,CAFD;;AAIE,sBACI;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAiC,IAAA,QAAQ,EAAEJ,YAA3C;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,iBAEQZ,MAAM,CAACiB,GAAP,CAAWd,KAAK,iBACR,QAAC,KAAD;AAEI,QAAA,YAAY,EAAEK,YAFlB;AAGI,QAAA,KAAK,EAAEF,WAAW,CAACH,KAAK,CAACC,EAAP,CAHtB;AAII,QAAA,SAAS,EAAED,KAAK,CAACe,SAJrB;AAKI,QAAA,QAAQ,EAAEf,KAAK,CAACgB,QALpB;AAMI,QAAA,EAAE,EAAEhB,KAAK,CAACC,EANd;AAOI,QAAA,IAAI,EAAED,KAAK,CAACiB,IAPhB;AAQI,QAAA,IAAI,EAAEjB,KAAK,CAACkB,IARhB;AASI,QAAA,UAAU,EAAElB,KAAK,CAACmB,UATtB;AAUI,QAAA,WAAW,EAAEnB,KAAK,CAACoB;AAVvB,SACSpB,KAAK,CAACC,EADf;AAAA;AAAA;AAAA;AAAA,cADR,CAFR,eAkBE,QAAC,UAAD;AAAY,QAAA,YAAY,EAAEQ,YAA1B;AAAwC,QAAA,IAAI,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH","sourcesContent":["import { useState } from 'react';\nimport { signupFields } from \"./formFields\"\nimport FormAction from \"./FormAction\";\nimport Input from \"./Input\";\n\nconst fields=signupFields;\nlet fieldsState={};\n\nfields.forEach(field => fieldsState[field.id]='');\n\nexport default function SignupPage(){\n  const [signupState,setSignupState]=useState(fieldsState);\n\n  const handleChange=(e)=>setSignupState({...signupState,[e.target.id]:e.target.value});\n\n  const handleSubmit=(e)=>{\n    e.preventDefault();\n    console.log(signupState)\n    createAccount()\n  }\n\n  //handle Signup API Integration here\n  const createAccount=()=>{\n\n  }\n\n    return(\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n        <div className=\"\">\n        {\n                fields.map(field=>\n                        <Input\n                            key={field.id}\n                            handleChange={handleChange}\n                            value={signupState[field.id]}\n                            labelText={field.labelText}\n                            labelFor={field.labelFor}\n                            id={field.id}\n                            name={field.name}\n                            type={field.type}\n                            isRequired={field.isRequired}\n                            placeholder={field.placeholder}\n                    />\n                \n                )\n            }\n          <FormAction handleSubmit={handleSubmit} text=\"Signup\" />\n        </div>\n\n         \n\n      </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}