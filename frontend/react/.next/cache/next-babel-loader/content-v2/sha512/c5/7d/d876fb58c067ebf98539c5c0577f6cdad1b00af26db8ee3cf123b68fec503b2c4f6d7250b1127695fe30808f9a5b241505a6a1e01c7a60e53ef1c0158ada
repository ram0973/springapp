{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ramil/IdeaProjects/springapp/frontend/react/components/Auth/Login.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport { loginFields } from \"./formFields\";\nimport FormAction from \"./FormAction\";\nimport FormExtra from \"./FormExtra\";\nimport Input from \"./Input\";\nconst fields = loginFields;\nlet fieldsState = {};\nfields.forEach(field => fieldsState[field.id] = '');\nexport default function Login() {\n  const {\n    0: loginState,\n    1: setLoginState\n  } = useState(fieldsState);\n\n  const handleChange = e => {\n    setLoginState(_objectSpread(_objectSpread({}, loginState), {}, {\n      [e.target.id]: e.target.value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    authenticateUser();\n  }; //Handle Login API Integration here\n\n\n  const authenticateUser = () => {\n    const history = useNavigate();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"mt-8 space-y-6\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"-space-y-px\",\n      children: fields.map(field => /*#__PURE__*/_jsxDEV(Input, {\n        handleChange: handleChange,\n        value: loginState[field.id],\n        labelText: field.labelText,\n        labelFor: field.labelFor,\n        id: field.id,\n        name: field.name,\n        type: field.type,\n        isRequired: field.isRequired,\n        placeholder: field.placeholder\n      }, field.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormExtra, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormAction, {\n      handleSubmit: handleSubmit,\n      text: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/ramil/IdeaProjects/springapp/frontend/react/components/Auth/Login.tsx"],"names":["useState","loginFields","FormAction","FormExtra","Input","fields","fieldsState","forEach","field","id","Login","loginState","setLoginState","handleChange","e","target","value","handleSubmit","preventDefault","authenticateUser","history","useNavigate","map","labelText","labelFor","name","type","isRequired","placeholder"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,MAAM,GAACJ,WAAb;AACA,IAAIK,WAAW,GAAG,EAAlB;AACAD,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAEF,WAAW,CAACE,KAAK,CAACC,EAAP,CAAX,GAAsB,EAA5C;AAEA,eAAe,SAASC,KAAT,GAAgB;AAC3B,QAAM;AAAA,OAACC,UAAD;AAAA,OAAYC;AAAZ,MAA2BZ,QAAQ,CAACM,WAAD,CAAzC;;AAEA,QAAMO,YAAY,GAAEC,CAAD,IAAK;AACpBF,IAAAA,aAAa,iCAAKD,UAAL;AAAgB,OAACG,CAAC,CAACC,MAAF,CAASN,EAAV,GAAcK,CAAC,CAACC,MAAF,CAASC;AAAvC,OAAb;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAEH,CAAD,IAAK;AACpBA,IAAAA,CAAC,CAACI,cAAF;AACAC,IAAAA,gBAAgB;AACnB,GAHD,CAP2B,CAY3B;;;AACA,QAAMA,gBAAgB,GAAG,MAAM;AAC3B,UAAMC,OAAO,GAAGC,WAAW,EAA3B;AACH,GAFD;;AAIA,sBACI;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAiC,IAAA,QAAQ,EAAEJ,YAA3C;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBAEQZ,MAAM,CAACiB,GAAP,CAAWd,KAAK,iBACR,QAAC,KAAD;AAEI,QAAA,YAAY,EAAEK,YAFlB;AAGI,QAAA,KAAK,EAAEF,UAAU,CAACH,KAAK,CAACC,EAAP,CAHrB;AAII,QAAA,SAAS,EAAED,KAAK,CAACe,SAJrB;AAKI,QAAA,QAAQ,EAAEf,KAAK,CAACgB,QALpB;AAMI,QAAA,EAAE,EAAEhB,KAAK,CAACC,EANd;AAOI,QAAA,IAAI,EAAED,KAAK,CAACiB,IAPhB;AAQI,QAAA,IAAI,EAAEjB,KAAK,CAACkB,IARhB;AASI,QAAA,UAAU,EAAElB,KAAK,CAACmB,UATtB;AAUI,QAAA,WAAW,EAAEnB,KAAK,CAACoB;AAVvB,SACSpB,KAAK,CAACC,EADf;AAAA;AAAA;AAAA;AAAA,cADR;AAFR;AAAA;AAAA;AAAA;AAAA,YADA,eAoBA,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YApBA,eAqBA,QAAC,UAAD;AAAY,MAAA,YAAY,EAAEQ,YAA1B;AAAwC,MAAA,IAAI,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,YArBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH","sourcesContent":["import { useState } from 'react';\nimport { loginFields } from \"./formFields\";\nimport FormAction from \"./FormAction\";\nimport FormExtra from \"./FormExtra\";\nimport Input from \"./Input\";\n\nconst fields=loginFields;\nlet fieldsState = {};\nfields.forEach(field=>fieldsState[field.id]='');\n\nexport default function Login(){\n    const [loginState,setLoginState]=useState(fieldsState);\n\n    const handleChange=(e)=>{\n        setLoginState({...loginState,[e.target.id]:e.target.value})\n    }\n\n    const handleSubmit=(e)=>{\n        e.preventDefault();\n        authenticateUser();\n    }\n\n    //Handle Login API Integration here\n    const authenticateUser = () => {\n        const history = useNavigate()\n    }\n\n    return(\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n        <div className=\"-space-y-px\">\n            {\n                fields.map(field=>\n                        <Input\n                            key={field.id}\n                            handleChange={handleChange}\n                            value={loginState[field.id]}\n                            labelText={field.labelText}\n                            labelFor={field.labelFor}\n                            id={field.id}\n                            name={field.name}\n                            type={field.type}\n                            isRequired={field.isRequired}\n                            placeholder={field.placeholder}\n                    />\n                )\n            }\n        </div>\n\n        <FormExtra/>\n        <FormAction handleSubmit={handleSubmit} text=\"Login\"/>\n\n      </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}