{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ra/jobs/05-next-ssg/step-5/pages/post/[id].tsx\";\nimport { useRouter } from \"next/router\";\nimport { fetchPost } from \"../../api/post\";\nimport { Loader } from \"../../components/Loader\";\nimport { postPaths as paths } from \"../../shared/staticPaths\";\nimport { PostBody } from \"../../components/Post/PostBody\";\nexport const getStaticProps = async ({\n  params\n}) => {\n  if (typeof params.id !== \"string\") throw new Error(\"Unexpected id\");\n  const post = await fetchPost(params.id);\n  return {\n    props: {\n      post\n    }\n  };\n};\nexport async function getStaticPaths() {\n  return {\n    paths,\n    fallback: true\n  };\n}\n\nconst Post = ({\n  post\n}) => {\n  const router = useRouter();\n  if (router.isFallback) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 33\n  }, this);\n  return /*#__PURE__*/_jsxDEV(PostBody, {\n    post: post\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n\nexport default Post;","map":{"version":3,"sources":["/home/ra/jobs/05-next-ssg/step-5/pages/post/[id].tsx"],"names":["useRouter","fetchPost","Loader","postPaths","paths","PostBody","getStaticProps","params","id","Error","post","props","getStaticPaths","fallback","Post","router","isFallback"],"mappings":";;AACA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,gBAA1B;AAEA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAASC,SAAS,IAAIC,KAAtB,QAAmC,0BAAnC;AACA,SAASC,QAAT,QAAyB,gCAAzB;AAMA,OAAO,MAAMC,cAAyC,GAAG,OAAO;AAC9DC,EAAAA;AAD8D,CAAP,KAEnD;AACJ,MAAI,OAAOA,MAAM,CAACC,EAAd,KAAqB,QAAzB,EAAmC,MAAM,IAAIC,KAAJ,CAAU,eAAV,CAAN;AACnC,QAAMC,IAAI,GAAG,MAAMT,SAAS,CAACM,MAAM,CAACC,EAAR,CAA5B;AACA,SAAO;AAAEG,IAAAA,KAAK,EAAE;AAAED,MAAAA;AAAF;AAAT,GAAP;AACD,CANM;AAQP,OAAO,eAAeE,cAAf,GAAgC;AACrC,SAAO;AAAER,IAAAA,KAAF;AAASS,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AACD;;AAED,MAAMC,IAAI,GAAG,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAyB;AACpC,QAAMK,MAAM,GAAGf,SAAS,EAAxB;AAEA,MAAIe,MAAM,CAACC,UAAX,EAAuB,oBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACvB,sBAAO,QAAC,QAAD;AAAU,IAAA,IAAI,EAAEN;AAAhB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CALD;;AAOA,eAAeI,IAAf","sourcesContent":["import { GetStaticProps } from \"next\"\nimport { useRouter } from \"next/router\"\nimport { fetchPost } from \"../../api/post\"\nimport { Post as PostType } from \"../../shared/types\"\nimport { Loader } from \"../../components/Loader\"\nimport { postPaths as paths } from \"../../shared/staticPaths\"\nimport { PostBody } from \"../../components/Post/PostBody\"\n\ntype PostProps = {\n  post: PostType\n}\n\nexport const getStaticProps: GetStaticProps<PostProps> = async ({\n  params\n}) => {\n  if (typeof params.id !== \"string\") throw new Error(\"Unexpected id\")\n  const post = await fetchPost(params.id)\n  return { props: { post } }\n}\n\nexport async function getStaticPaths() {\n  return { paths, fallback: true }\n}\n\nconst Post = ({ post }: PostProps) => {\n  const router = useRouter()\n\n  if (router.isFallback) return <Loader />\n  return <PostBody post={post} />\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}